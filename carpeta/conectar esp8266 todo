/* Este archivo vamos a utilizarlo para conectar nuestro dispositivo esp8266 a una red wifi propia 
vamos a usar o pin 14 para controlar un led o cal nos indicará se a conexion se estableceu ou non
Roberto Sieira González
1/06/2023*/



#include <ESP8266WiFi.h>

// WiFi móbil
#define MAX_INTENTOS 50
#define WIFI_SSID "ssd"
#define WIFI_PASS "pass"

// Pins datos
// GPIO14: D5
#define LED 14

int tempo = 500;
bool conectado = false;

void setup() {
  Serial.begin(9600);
  pinMode(LED, OUTPUT);
  conectarWiFi();
}

// Función que se encarga de xestionar a conexión á rede
void conectarWiFi() {
  WiFi.mode(WIFI_STA);  // Indica modo Station (conexión a outro dispositivo)
  WiFi.disconnect();    // Desconecta unha posible conexión previa
  WiFi.begin(WIFI_SSID, WIFI_PASS); // Inicia a conexión 
  Serial.print("\n\nAgardando pola WiFi ");
  int contador = 0;  // Comproba estado da conexión e fai varias tentativas
  while(WiFi.status() != WL_CONNECTED and contador < MAX_INTENTOS) {
    contador++;
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  // Informa do estado da conexión e IP en caso de éxito
  if(contador < MAX_INTENTOS) {
    Serial.print("Conectado á WiFi coa IP: "); Serial.println(WiFi.localIP());
  }
  else {
    Serial.println("Non se puido conectar á WiFi");
  }
  Serial.print("\n\n\n");
}

void loop() {
  if(conectado) escintila(tempo);
  else escintila(tempo/10);
}

// Función que encende e apaga o LED cunha
// frecuencia determianda pola variable 'espera'
void escintila(int espera) {
  digitalWrite(LED, HIGH);
  delay(espera);
  digitalWrite(LED, LOW);
  delay(espera);
}
